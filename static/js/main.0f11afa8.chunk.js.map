{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","diceState","setDiceState","throwDice","num","result","Math","floor","random","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAsCeA,MAnCf,WACE,IACA,EAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAY,SAACC,GACjB,IAAMC,EAASC,KAAKC,MAAMD,KAAKE,SAAWJ,GAAO,EACjDF,EAAaG,IAIf,OACE,sBAAKI,UAAU,MAAf,UACE,iCACE,6BAZS,iCAgBX,0BAASA,UAAY,cAArB,UACE,8BACE,6BACG,6BAA+BR,MAGpC,wBAAQS,QAAS,kBAAMP,EAAU,IAAjC,8BACA,uBAAK,uBACL,wBAAQO,QAAS,kBAAMP,EAAU,KAAjC,+BACA,uBAAK,uBACL,wBAAQO,QAAS,kBAAMP,EAAU,KAAjC,+BACA,uBAAK,uBACL,wBAAQO,QAAS,kBAAMP,EAAU,KAAjC,sCCpBOQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0f11afa8.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './assets/css/App.css';\n\nfunction App() {\n  const Titulo = 'Vamos a Jugar a los dados.' \n  const [diceState, setDiceState] = useState(0);\n  //const [diceFaceQuantity, setDiceFaceQuantity] = useState(null);\n  const throwDice = (num) => {\n    const result = Math.floor(Math.random() * num) + 1;\n    setDiceState(result); \n  };\n\n  \n  return (\n    <div className=\"App\">\n      <header>\n        <h4>\n          {Titulo}\n        </h4> \n      </header>\n      <section className = \"App-content\"> \n        <div>\n          <h4>  \n            {'El resultado del Dado es: ' + diceState }\n          </h4>\n        </div>\n        <button onClick={() => throwDice(6)}>Dado de 6 caras.</button>\n        <br/><br/>\n        <button onClick={() => throwDice(12)}>Dado de 12 caras.</button>\n        <br/><br/>\n        <button onClick={() => throwDice(20)}>Dado de 20 caras.</button>\n        <br/><br/>\n        <button onClick={() => throwDice(27)}>Dado de 27 caras.</button>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}